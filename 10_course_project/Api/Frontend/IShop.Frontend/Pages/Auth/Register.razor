@page "/auth/register"
@attribute [Microsoft.AspNetCore.Authorization.AllowAnonymous]
@using IShop.Frontend.Services
@inject AuthService AuthService
@inject NavigationManager NavigationManager
@inject IConfiguration Config

<h3>Register</h3>

@if (showSuccess)
{
    <div class="alert alert-success">
        На ваш емейл был выслано письмо для подтверждения регистрации.

        <a href="@Config["ApiGatewayUrl"]/api/customers/auth/confirm-email/@customerId">Секретная ссылка из письма для @customerId</a>
    </div>
}
else 
{
    <div class="mt-5">
        <EditForm Model="@registerModel" OnValidSubmit="HandleRegister">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label for="firstName">First Name</label>
                <InputText id="firstName" class="form-control" @bind-Value="registerModel.FirstName" />
                <ValidationMessage For="@(() => registerModel.FirstName)" />
            </div>

            <div class="form-group">
                <label for="lastName">Last Name</label>
                <InputText id="lastName" class="form-control" @bind-Value="registerModel.LastName" />
                <ValidationMessage For="@(() => registerModel.LastName)" />
            </div>

            <div class="form-group">
                <label for="email">Email</label>
                <InputText id="email" class="form-control" @bind-Value="registerModel.Email" />
                <ValidationMessage For="@(() => registerModel.Email)" />
            </div>

            <div class="form-group">
                <label for="password">Password</label>
                <InputText id="password" type="password" class="form-control" @bind-Value="registerModel.Password" />
                <ValidationMessage For="@(() => registerModel.Password)" />
            </div>

            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <div class="alert alert-danger">@errorMessage</div>
            }

            <button type="submit" class="btn btn-primary">Register</button>
        </EditForm>
    </div>


    <div class="mt-3">
        Уже зареристрированы? <a href="/auth/login">Войти</a>
    </div>
}

@code {
    private class RegisterFormModel
    {
        public string FirstName { get; set; } = "";
        public string LastName { get; set; } = "";
        public string Email { get; set; } = "";
        public string Password { get; set; } = "";
    }

    private RegisterFormModel registerModel = new();
    private string errorMessage = string.Empty;
    private bool showSuccess = false;
    private string? customerId = null;
    private async Task HandleRegister()
    {
        errorMessage = string.Empty;

        try
        {
            var registerDto = new RegisterModel(
                registerModel.FirstName,
                registerModel.LastName,
                registerModel.Email,
                registerModel.Password);

            var result = await AuthService.RegisterUser(registerDto);
            if (result is not null)
            {
                customerId = result;
                showSuccess = true;
            }
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
    }
}
