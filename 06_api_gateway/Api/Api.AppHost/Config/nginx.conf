worker_processes 1;

events {
    worker_connections 1024;
}

http { 
    log_format custom '$remote_addr - $remote_user [$time_local] '
                     '"$request" $status $body_bytes_sent '
                     '"$http_referer" "$http_user_agent" '
                     '"$http_x_user_id"';

    log_format auth_response '[$time_local] AUTH RESPONSE: status=$upstream_status '
                      'headers="$upstream_http_x_auth_token, $upstream_http_x_user_id"';
    
    log_format auth_user_id '[$time_local] AUTH RESPONSE: X-User-Id=$upstream_http_x_user_id';

    resolver 127.0.0.11 valid=10s; # DNS Docker
    resolver_timeout 5s;

    upstream userprofile {
        server userprofileapi:8080; # 
    }

    upstream authapi1 {
        server authapi:8080; # Auth сервис
    }

    server {
        listen 80;
        server_name arch.homework;
        
        location /profile/register {
            proxy_pass http://userprofile/register;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Все остальные запросы идут на userprofileapi с проверкой аутентификации
        location /profile/ {
            auth_request /auth/auth; # Проверка токена через Auth сервис
            auth_request_set $user_id $upstream_http_x_user_id; # Извлекаем X-User-Id
            proxy_pass http://userprofile/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-User-Id $user_id; # Передаём X-User-Id в userprofileapi
        }

        location /auth/ {
            access_log /dev/stdout auth_user_id;
            proxy_pass http://authapi1/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
