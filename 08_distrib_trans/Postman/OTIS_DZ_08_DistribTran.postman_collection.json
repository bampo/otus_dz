{
	"info": {
		"_postman_id": "1d20ed29-180c-40c3-859b-01c9315f3e56",
		"name": "OTIS_DZ_08_DistribTran",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "1699867"
	},
	"item": [
		{
			"name": "01_Order_Complete",
			"item": [
				{
					"name": "Order_Create_Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"let jsonData = pm.response.json();\r",
									"pm.environment.set(\"orderId\", jsonData.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"CustomerId\": \"123e4567-e89b-12d3-a456-426614174000\",\r\n  \"ProductId\": \"789e4567-e89b-12d3-a456-426614174001\",\r\n  \"Quantity\": 5,\r\n  \"Amount\": 1,\r\n  \"TimeSlot\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/orders/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"orders",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Order_Completed_OK",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"let jsonData = pm.response.json();\r",
									"pm.test(\"Order is Complete\", function()\r",
									"{\r",
									"    pm.expect(jsonData.status).to.eql(\"Completed\");\r",
									"}\r",
									");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/orders/{{orderId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"orders",
								"{{orderId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "02_Payment_Failed",
			"item": [
				{
					"name": "Order_Create_Payment_Wrong",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"let jsonData = pm.response.json();\r",
									"pm.environment.set(\"orderId\", jsonData.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"CustomerId\": \"123e4567-e89b-12d3-a456-426614174000\",\r\n  \"ProductId\": \"789e4567-e89b-12d3-a456-426614174001\",\r\n  \"Quantity\": 5,\r\n  \"Amount\": 101, // amount > 100\r\n  \"TimeSlot\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/orders/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"orders",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Order_Get_Failed_Payment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"let jsonData = pm.response.json();\r",
									"pm.test(\"Payment failed\", function()\r",
									"{\r",
									"    pm.expect(jsonData.status).to.eql(\"Failed\");\r",
									"    pm.expect(jsonData.reason).to.eql(\"Payment failed\");\r",
									"}\r",
									");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/orders/{{orderId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"orders",
								"{{orderId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "03_StockReservation_Failed",
			"item": [
				{
					"name": "Order_Create_StockReserve_Wrong",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"let jsonData = pm.response.json();\r",
									"pm.environment.set(\"orderId\", jsonData.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"CustomerId\": \"123e4567-e89b-12d3-a456-426614174000\",\r\n  \"ProductId\": \"789e4567-e89b-12d3-a456-426614174001\",\r\n  \"Quantity\": 11, // stocks > 10\r\n  \"Amount\": 10, \r\n  \"TimeSlot\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/orders/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"orders",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Order_Get_Failed_StockReservation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"let jsonData = pm.response.json();\r",
									"pm.test(\"Stock Reserve failed\", function()\r",
									"{\r",
									"    pm.expect(jsonData.status).to.eql(\"Failed\");\r",
									"    pm.expect(jsonData.reason).to.eql(\"Stock reservation failed\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/orders/{{orderId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"orders",
								"{{orderId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "04_Delivery_Failed",
			"item": [
				{
					"name": "Order_Create_Delivery_Wrong",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"let jsonData = pm.response.json();\r",
									"pm.environment.set(\"orderId\", jsonData.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"CustomerId\": \"123e4567-e89b-12d3-a456-426614174000\",\r\n  \"ProductId\": \"789e4567-e89b-12d3-a456-426614174001\",\r\n  \"Quantity\": 1,\r\n  \"Amount\": 10, \r\n  \"TimeSlot\": 1 // TimeSlot не четный\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/orders/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"orders",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Order_Get_Failed_Delivery",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"let jsonData = pm.response.json();\r",
									"pm.test(\"Delivery failed\", function()\r",
									"{\r",
									"    pm.expect(jsonData.status).to.eql(\"Failed\");\r",
									"    pm.expect(jsonData.reason).to.eql(\"No free curiers for slot\");\r",
									"}\r",
									");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/orders/{{orderId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"orders",
								"{{orderId}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://arch.homework",
			"type": "string"
		}
	]
}